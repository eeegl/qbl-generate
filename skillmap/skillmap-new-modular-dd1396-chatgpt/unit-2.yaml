# UNIT
# This unit covers parallel and concurrent programming using Golang.
# It introduces foundational concepts and practical skills for effective concurrent programming.
title: "Parallel and Concurrent Programming in Golang"
modules:

  # MODULE
  # This module introduces learners to the basics of concurrency in Golang,
  # focusing on understanding goroutines and channels.
  - title: "Introduction to Concurrency"
    pages:

      # PAGE
      # This page covers the fundamentals of concurrent programming in Golang,
      # including the use of goroutines and channels for communication.
      - title: "Fundamentals of Concurrency"
        objective: "Understand the basics of concurrent programming in Golang"
        skills:
          - "Create and manage goroutines"
          - "Use channels for communication"
          - "Avoid race conditions using mutexes"

  # MODULE
  # This module dives deeper into common issues in concurrent programming,
  # such as data races, deadlocks, and synchronization techniques.
  - title: "Common Issues in Concurrent Programming"
    pages:

      # PAGE
      # This page explains how to detect and resolve data races and deadlocks,
      # which are critical issues in concurrent programming.
      - title: "Detecting Data Races and Deadlocks"
        objective: "Recognize and resolve common concurrency bugs"
        skills:
          - "Identify symptoms of data races"
          - "Implement synchronization techniques"
          - "Analyze and debug deadlock scenarios"

  # MODULE
  # This module explores advanced techniques and patterns in concurrent programming,
  # including fan-in/fan-out and context handling.
  - title: "Advanced Concurrent Programming Techniques"
    pages:

      # PAGE
      # This page covers advanced concurrency patterns and best practices,
      # such as fan-in/fan-out, context handling, and error propagation.
      - title: "Advanced Patterns and Best Practices"
        objective: "Apply advanced concurrent programming techniques"
        skills:
          - "Implement fan-in and fan-out patterns"
          - "Manage concurrency with contexts"
          - "Handle errors in concurrent programs"
